name: Build & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux-amd64
            os: ubuntu-22.04
            target: linux/amd64
            artifact: linux-amd64
          - name: windows-amd64
            os: windows-latest
            target: windows/amd64
            artifact: windows-amd64
          - name: macos-arm64
            os: macos-14
            target: darwin/arm64
            artifact: macos-arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Drop local Wails replace
        shell: bash
        run: |
          if grep -q "replace github.com/wailsapp/wails/v2" go.mod; then
            go mod edit -dropreplace=github.com/wailsapp/wails/v2
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        env:
          CI: true
        run: npm ci

      - name: Run Go tests
        run: go test ./...

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.2

      - name: Install Linux dependencies
        if: matrix.target == 'linux/amd64'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libgtk-3-dev
          sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev

      - name: Build application
        run: wails build -platform ${{ matrix.target }}
        env:
          CGO_ENABLED: 1

      - name: Upload artifacts
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: build/bin/**
          retention-days: 7

  release:
    name: Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Collect contributors
        id: contributors
        shell: bash
        run: |
          git fetch --tags --force
          current_tag="${GITHUB_REF#refs/tags/}"
          prev_tag=$(git describe --tags --abbrev=0 "${current_tag}^" 2>/dev/null || echo "")
          if [ -n "$prev_tag" ]; then
            range="${prev_tag}..${current_tag}"
          else
            range="${current_tag}"
          fi
          authors=$(git log "$range" --format='%an' | sort -u)
          if [ -n "$authors" ]; then
            thanks="特别感谢本次贡献者：$(echo "$authors" | paste -sd '�? -)"
          else
            thanks="特别感谢所有贡献者的持续支持�?
          fi
          printf 'thanks_message=%s\n' "$thanks" >> "$GITHUB_OUTPUT"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          generate_release_notes: true

      - name: Append thanks to release notes
        uses: actions/github-script@v7
        env:
          THANKS_MESSAGE: ${{ steps.contributors.outputs.thanks_message }}
        with:
          script: |
            const tagName = context.ref.replace('refs/tags/', '');
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tagName
            });
            const thanks = process.env.THANKS_MESSAGE || '';
            const separator = thanks ? '\n\n' : '';
            const updatedBody = `${release.data.body || ''}${separator}${thanks}`;
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              body: updatedBody
            });
